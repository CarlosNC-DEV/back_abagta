generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model categories {
  id        String    @id @default(uuid())
  name      String
  duration  Int
  status    String    @default("A") // A=activa, I=inhabilitada
  clients   clients[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model messages {
  id          String   @id @default(uuid())
  description String
  order       Int      @unique
  daysToSend  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model clients {
  id         String     @id @default(uuid())
  name       String
  phone      String
  plate      String     @unique
  date       String
  pay        String
  respay     String
  address    String
  status     String     @default("A") // A=activo, V=vencido, M=mora, I=inhabilitado
  categoryId String
  category   categories @relation(fields: [categoryId], references: [id])
  payments   payments[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([phone])
  @@index([date])
  @@index([categoryId])
}

model payments {
  id           String   @id @default(uuid())
  dueDate      String
  paid         Boolean  @default(false)
  active       Boolean  @default(true)
  sentMessages Int[]
  clientId     String
  client       clients  @relation(fields: [clientId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([clientId])
  @@index([dueDate])
}

model pending_messages {
  id        String   @id @default(uuid())
  name      String
  phone     String
  plate     String
  paymentId String
  message   String
  processed Boolean  @default(false)
  createdAt DateTime @default(now())
}
